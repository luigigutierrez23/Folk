{"version":3,"sources":["app/models/post.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/postStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/posts/dashboard/PostListItemAttendee.tsx","features/posts/dashboard/PostListItem.tsx","features/posts/dashboard/PostList.tsx","features/posts/dashboard/PostFilters.tsx","features/posts/dashboard/PostListItemPlaceholder.tsx","features/posts/dashboard/PostDashboard.tsx","app/common/form/TextInput.tsx","features/user/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/TextArea.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","app/common/options/categoryOptions.ts","features/posts/form/PostForm.tsx","features/posts/details/PostDetailedHeader.tsx","features/posts/details/PostDetailedInfo.tsx","features/posts/details/PostDetailedChat.tsx","features/posts/details/PostDetailedSideBar.tsx","features/posts/details/PostDetails.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/errors/TestError.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfilePosts.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/util/hooks.ts","features/user/RegisterSuccess.tsx","features/user/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollTop.tsx","index.tsx"],"names":["Post","init","Object","assign","this","PostFormValues","post","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","store","userStore","logout","commonStore","setServerError","Promise","reject","responseBody","requests","url","get","then","body","put","delete","agent","Posts","list","params","details","create","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listPosts","Profile","displayName","image","PostStore","postRegistry","Map","selectedPost","editMode","loading","loadingInitial","pagingParams","set","loadPosts","axiosParams","result","forEach","setPost","setPagination","setLoadingInitial","console","loadPost","getPost","runInAction","createPost","attendee","newPost","hostUsername","attendees","log","updatePost","updatedPost","deletePost","updateAttendance","isGoing","filter","cancelPostToggle","isCancelled","updateAttendeeFollowing","following","followersCount","setPagingParams","setPredicate","value","resetPredicate","some","isHost","host","find","x","Date","state","clearSelectedPost","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","postsByDate","reduce","posts","format","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","removeItem","getUser","facebookLogin","apiLogin","catch","err","FB","authResponse","scope","stopRefreshTokenTimer","getFacebookLoginStatus","getLoginStatus","setImage","setDisplayName","name","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userPosts","loadingPosts","setActiveTab","loadProfile","photo","photos","isMain","p","postStore","followingCount","loadFollowings","loadUserPosts","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","postId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","size","circular","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedPosts","group","sub","divided","vertical","marginTop","active","has","onChange","PostListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","PostFilters","Loader","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","CustomTextArea","CustomSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","MyDateInput","selected","categoryOptions","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","Extra","PostDetailedHeader","PostDetailedInfo","PostDetailedChat","PostDetailedSideBar","NotFound","Inline","primary","message","Modal","onClose","TestErrors","widths","baseUrl","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","ProfilePosts","menuPosition","Statistic","ProfileHeader","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","PostDashboard","PostDetails","PostForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.42fb75bf.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\r\n\r\nexport interface Post {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Post implements Post {\r\n  constructor(init?: PostFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class PostFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(post?: PostFormValues) {\r\n    if (post) {\r\n      this.id = post.id;\r\n      this.title = post.title;\r\n      this.category = post.category;\r\n      this.description = post.description;\r\n      this.date = post.date;\r\n      this.city = post.city;\r\n      this.venue = post.venue;\r\n    }\r\n  }\r\n}\r\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Post, PostFormValues } from \"../models/post\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\nimport { Photo, Profile, UserPost } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = window.localStorage.getItem(\"jwt\");\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (\r\n          config.method === \"get\" &&\r\n          data.errors &&\r\n          data.errors.hasOwnProperty(\"id\")\r\n        ) {\r\n          history.push(\"/not-found\");\r\n        }\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          status === 401 &&\r\n          headers[\"www-authenticate\"]?.startsWith(\r\n            'Bearer error=\"invalid_token\"'\r\n          )\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error(\"Sesion expired - please login again\");\r\n        }\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Posts = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Post[]>>(\"/posts\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Post>(`/posts/${id}`),\r\n  create: (post: PostFormValues) => requests.post<void>(\"/posts\", post),\r\n  update: (post: PostFormValues) =>\r\n    requests.put<void>(`posts/${post.id}`, post),\r\n  delete: (id: string) => requests.del<void>(`posts/${id}`),\r\n  attend: (id: string) => requests.post<void>(`posts/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>(`/account/refreshToken`, {}),\r\n  verifyEmail: (token: string, email: string) =>\r\n    requests.post<void>(\r\n      `/account/verifyEmail?token=${token}&email=${email}`,\r\n      {}\r\n    ),\r\n  resendEmailConfirm: (email: string) =>\r\n    requests.get(`/account/resendEmailConfirmationLink?email=${email}`),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/set-main`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listPosts: (username: string, predicate: string) =>\r\n    requests.get<UserPost[]>(\r\n      `/profiles/${username}/posts?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Posts,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserPost {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { format } from \"date-fns\";\r\nimport { Post, PostFormValues } from \"../models/post\";\r\n\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class PostStore {\r\n  postRegistry = new Map<string, Post>();\r\n  selectedPost: Post | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.postRegistry.clear();\r\n        this.loadPosts();\r\n      }\r\n    );\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get postsByDate() {\r\n    return Array.from(this.postRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedPosts() {\r\n    return Object.entries(\r\n      this.postsByDate.reduce((posts, post) => {\r\n        const date = format(post.date!, \"dd MMM yyyy\");\r\n        posts[date] = posts[date] ? [...posts[date], post] : [post];\r\n        return posts;\r\n      }, {} as { [key: string]: Post[] })\r\n    );\r\n  }\r\n\r\n  // Methods\r\n  loadPosts = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Posts.list(this.axiosParams);\r\n      result.data.forEach((post) => {\r\n        this.setPost(post);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  loadPost = async (id: string) => {\r\n    let post = this.getPost(id);\r\n\r\n    if (post) {\r\n      this.selectedPost = post;\r\n      return post;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        post = await agent.Posts.details(id);\r\n        this.setPost(post);\r\n        runInAction(() => {\r\n          this.selectedPost = post;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return post;\r\n      } catch (err) {\r\n        this.setLoadingInitial(false);\r\n        console.error(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  createPost = async (post: PostFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Posts.create(post);\r\n      const newPost = new Post(post);\r\n      newPost.hostUsername = user!.username;\r\n      newPost.attendees = [attendee];\r\n      this.setPost(newPost);\r\n      runInAction(() => {\r\n        this.selectedPost = newPost;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  updatePost = async (post: PostFormValues) => {\r\n    try {\r\n      await agent.Posts.update(post);\r\n      runInAction(() => {\r\n        if (post.id) {\r\n          let updatedPost = { ...this.getPost(post.id), ...post };\r\n          this.postRegistry.set(post.id, updatedPost as Post);\r\n          this.selectedPost = updatedPost as Post;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  deletePost = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Posts.delete(id);\r\n      runInAction(() => {\r\n        this.postRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Posts.attend(this.selectedPost!.id);\r\n      runInAction(() => {\r\n        if (this.selectedPost?.isGoing) {\r\n          this.selectedPost.attendees = this.selectedPost.attendees?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedPost.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedPost?.attendees?.push(attendee);\r\n          this.selectedPost!.isGoing = true;\r\n        }\r\n        this.postRegistry.set(this.selectedPost!.id, this.selectedPost!);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  cancelPostToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Posts.attend(this.selectedPost!.id);\r\n      runInAction(() => {\r\n        this.selectedPost!.isCancelled = !this.selectedPost?.isCancelled;\r\n        this.postRegistry.set(this.selectedPost!.id, this.selectedPost!);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.postRegistry.forEach((post) => {\r\n      post.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") {\r\n          this.predicate.delete(key);\r\n        }\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  private setPost = (post: Post) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      post.isGoing = post.attendees!.some((a) => a.username === user.username);\r\n      post.isHost = post.hostUsername === user.username;\r\n      post.host = post.attendees?.find((x) => x.username === post.hostUsername);\r\n    }\r\n\r\n    post.date = new Date(post.date!);\r\n    this.postRegistry.set(post.id, post);\r\n  };\r\n\r\n  private getPost = (id: string) => {\r\n    return this.postRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  clearSelectedPost = () => {\r\n    this.selectedPost = undefined;\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/posts\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      await agent.Account.register(creds);\r\n      history.push(`/account/registerSuccess?email=${creds.email}`);\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/posts\");\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          runInAction(() => {\r\n            this.fbLoading = false;\r\n          });\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserPost } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings: boolean = false;\r\n  activeTab = 0;\r\n  userPosts: UserPost[] = [];\r\n  loadingPosts = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.postStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserPosts = async (username: string, predicate?: string) => {\r\n    this.loadingPosts = true;\r\n    try {\r\n      const posts = await agent.Profiles.listPosts(username, predicate!);\r\n      runInAction(() => {\r\n        this.userPosts = posts;\r\n        this.loadingPosts = false;\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      runInAction(() => {\r\n        this.loadingPosts = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport PostStore from \"./postStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store {\r\n  postStore: PostStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  postStore: new PostStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (postId: string) => {\r\n    if (store.postStore.selectedPost) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?postId=\" + postId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.postId = store.postStore.selectedPost?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout, isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} exact to=\"/\" header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Folk\r\n        </Menu.Item>\r\n        {isLoggedIn && (\r\n          <>\r\n            <Menu.Item name=\"Posts\" as={NavLink} to=\"/posts\" />\r\n            <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n            <Menu.Item>\r\n              <Button\r\n                as={NavLink}\r\n                to=\"/create-post\"\r\n                positive\r\n                content=\"Create Post\"\r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item position=\"right\">\r\n              <Image\r\n                src={user?.image || \"/assets/user.png\"}\r\n                avatar\r\n                spaced=\"right\"\r\n              />\r\n              <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profiles/${user?.username}`}\r\n                    text=\"My Profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const {\r\n    profileStore: { updateFollowing, loading },\r\n    userStore,\r\n  } = useStore();\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} Followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function PostListItemAttendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 2,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((a) => (\r\n        <Popup\r\n          hoverable\r\n          key={a.username}\r\n          trigger={\r\n            <List.Item\r\n              key={a.username}\r\n              as={Link}\r\n              to={`/profiles/${a.username}`}\r\n            >\r\n              <Image\r\n                bordered\r\n                style={a.following ? styles : null}\r\n                size=\"mini\"\r\n                circular\r\n                src={a.image || \"/assets/user.png\"}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={a} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport { Post } from \"../../../app/models/post\";\r\nimport PostListItemAttendee from \"./PostListItemAttendee\";\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\n\r\nexport default function ActivityListItem({ post }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {post.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item key={post.id}>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={post.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/posts/${post.id}`}>\r\n                {post.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${post.hostUsername}`}>\r\n                  {post.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {post.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this post\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {post.isGoing && !post.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are goint to this post\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(post.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {post.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <PostListItemAttendee attendees={post.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{post.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/posts/${post.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"teal\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nimport PostListItem from \"./PostListItem\";\r\n\r\nexport default observer(function PostList() {\r\n  const { postStore } = useStore();\r\n  const { groupedPosts } = postStore;\r\n  return (\r\n    <>\r\n      {groupedPosts.map(([group, posts]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          <Item.Group divided>\r\n            {posts.map((post) => (\r\n              <PostListItem key={post.id} post={post} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    postStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activites\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function PostListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nimport PostList from \"./PostList\";\r\nimport PostFilters from \"./PostFilters\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport PostListItemPlaceholder from \"./PostListItemPlaceholder\";\r\n\r\nexport default observer(function PostDashboard() {\r\n  const {\r\n    postStore: {\r\n      loadPosts,\r\n      postRegistry,\r\n      loadingInitial,\r\n      setPagingParams,\r\n      pagination,\r\n    },\r\n  } = useStore();\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadPosts().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (postRegistry.size <= 1) loadPosts();\r\n  }, [postRegistry.size, loadPosts]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && !loadingNext ? (\r\n          <>\r\n            <PostListItemPlaceholder />\r\n            <PostListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <PostList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <PostFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function CustomTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: error.response.data }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Folk\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <CustomTextInput name=\"email\" placeholder=\"Email\" />\r\n          <CustomTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivites\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <CustomTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <CustomTextInput name=\"username\" placeholder=\"Username\" />\r\n          <CustomTextInput name=\"email\" placeholder=\"Email\" />\r\n          <CustomTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../user/LoginForm\";\r\nimport RegisterForm from \"../user/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Folk\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content={`Welcome to Folk`} />\r\n            <Button as={Link} to=\"/posts\" size=\"huge\" inverted>\r\n              Go to posts!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome Folker\" />\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nconst LoadingComponent: React.FC<IProps> = ({ inverted, content }) => {\r\n  return (\r\n    <Dimmer active inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function CustomTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function CustomSelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CustomTextInput from \"../../../app/common/form/TextInput\";\r\nimport CustomTextArea from \"../../../app/common/form/TextArea\";\r\nimport CustomSelectInput from \"../../../app/common/form/SelectInput\";\r\nimport CustomDateInput from \"../../../app/common/form/DateInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport { PostFormValues } from \"../../../app/models/post\";\r\n\r\nexport default observer(function PostForm() {\r\n  const history = useHistory();\r\n  const { postStore } = useStore();\r\n  const { createPost, updatePost, loadPost, loadingInitial } = postStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [post, setPost] = useState<PostFormValues>(new PostFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The post title is required\"),\r\n    description: Yup.string().required(\"The post description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadPost(id).then((post) => setPost(new PostFormValues(post)));\r\n  }, [id, loadPost]);\r\n\r\n  function handleFormSubmit(post: PostFormValues) {\r\n    if (!post.id) {\r\n      let newPost = {\r\n        ...post,\r\n        id: uuid(),\r\n      };\r\n      createPost(newPost).then(() => history.push(`/posts/${newPost.id}`));\r\n    } else {\r\n      updatePost(post).then(() => history.push(`/posts/${post.id}`));\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Posts Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={post}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <CustomTextInput name=\"title\" placeholder=\"Title\" />\r\n            <CustomTextArea\r\n              rows={3}\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n            />\r\n            <CustomSelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <CustomDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <CustomTextInput placeholder=\"City\" name=\"city\" />\r\n            <CustomTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/posts\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Post } from \"../../../app/models/post\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ post }: Props) {\r\n  const {\r\n    postStore: { updateAttendance, loading, cancelPostToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {post.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${post.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={post.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(post.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${post.host?.username}`}>\r\n                      {post.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {post.isHost ? (\r\n          <>\r\n            <Button\r\n              color={post.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={post.isCancelled ? \"Re-active Post\" : \"Cancel Post\"}\r\n              onClick={cancelPostToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to={`/manage/${post.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n              disabled={post.isCancelled}\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : post.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            loading={loading}\r\n            disabled={post.isCancelled}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Post } from \"../../../app/models/post\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ post }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{post.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(post.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {post.venue}, {post.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns/esm\";\r\n\r\ninterface Props {\r\n  postId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ postId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (postId) {\r\n      commentStore.createHubConnection(postId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, postId]);\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Post } from \"../../../app/models/post\";\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  post: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((a) => (\r\n            <Item style={{ position: \"relative\" }} key={a.username}>\r\n              {a.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n\r\n              <Image size=\"tiny\" src={a.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${a.username}`}>{a.displayName}</Link>\r\n                </Item.Header>\r\n                {a.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport PostDetailedHeader from \"./PostDetailedHeader\";\r\nimport PostDetailedInfo from \"./PostDetailedInfo\";\r\nimport PostDetailedChat from \"./PostDetailedChat\";\r\nimport PostDetailedSideBar from \"./PostDetailedSideBar\";\r\n\r\nexport default observer(function PostDetails() {\r\n  const { postStore } = useStore();\r\n  const {\r\n    selectedPost: post,\r\n    loadPost,\r\n    loadingInitial,\r\n    clearSelectedPost,\r\n  } = postStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadPost(id);\r\n    return () => clearSelectedPost();\r\n  }, [id, loadPost, clearSelectedPost]);\r\n\r\n  if (loadingInitial || !post) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <PostDetailedHeader post={post} />\r\n        <PostDetailedInfo post={post} />\r\n        <PostDetailedChat postId={post.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <PostDetailedSideBar post={post} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/posts\" primary>\r\n          Return to posts page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorized() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorized\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + \"posts/notaguid\").catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"posts\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorized}\r\n            content=\"Unauthorized\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n      loading,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => {\r\n      setAddPhotoMode(false);\r\n    });\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport CustomTextArea from \"../../app/common/form/TextArea\";\r\nimport CustomTextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <CustomTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <CustomTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const {\r\n    profileStore: { profile, followings, loadingFollowings, activeTab },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following `\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserPost } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const {\r\n    profileStore: { loadUserPosts, profile, loadingPosts, userPosts },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadUserPosts(profile!.username);\r\n  }, [loadUserPosts, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserPosts(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingPosts}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Posts\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userPosts.map((post: UserPost) => (\r\n              <Card as={Link} to={`/activities/${post.id}`} key={post.id}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${post.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{post.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(post.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(post.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfilePosts from \"./ProfilePosts\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => <ProfileAbout />,\r\n    },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => <ProfilePhotos profile={profile} />,\r\n    },\r\n    {\r\n      menuItem: \"Events\",\r\n      render: () => <ProfilePosts />,\r\n    },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePage({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const {\r\n    profileStore: { loadingProfile, loadProfile, profile, setActiveTab },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon color=\"green\">\r\n        <Icon name=\"check\" />\r\n        Successfully registered!\r\n      </Header>\r\n      <p>\r\n        Please check your email (incluiding junk email) for the verification\r\n        email\r\n      </p>\r\n      {email && (\r\n        <>\r\n          <p>Didn't receive the email? Click the below button to resend</p>\r\n          <Button\r\n            primary\r\n            onClick={handleConfirmEmailResend}\r\n            content=\"Resend email\"\r\n            size=\"huge\"\r\n          />\r\n        </>\r\n      )}\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function ConfirmEmail() {\r\n  const { modalStore } = useStore();\r\n\r\n  const token = useQuery().get(\"token\") as string;\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  const Status = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n    Success: \"Success\",\r\n  };\r\n\r\n  const [status, setStatus] = useState(Status.Verifying);\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    agent.Account.verifyEmail(token, email)\r\n      .then(() => {\r\n        setStatus(Status.Success);\r\n      })\r\n      .catch(() => {\r\n        setStatus(Status.Failed);\r\n      });\r\n  }, [Status.Failed, Status.Success, token, email]);\r\n\r\n  function getBody() {\r\n    switch (status) {\r\n      case Status.Verifying:\r\n        return <p>Verifying...</p>;\r\n      case Status.Failed:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Verification failed. You can try resending the verify link to your\r\n              email\r\n            </p>\r\n            <Button\r\n              primary\r\n              onClick={handleConfirmEmailResend}\r\n              size=\"huge\"\r\n              content=\"Resend email\"\r\n            />\r\n          </div>\r\n        );\r\n      case Status.Success:\r\n        return (\r\n          <div>\r\n            <p>Email has been verified - you can now login</p>\r\n            <Button\r\n              primary\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              content=\"Login\"\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"envelope\" />\r\n        Email verification\r\n      </Header>\r\n      <Segment.Inline>{getBody()}</Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport PostDashboard from \"../../features/posts/dashboard/PostDashboard\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport PostForm from \"../../features/posts/form/PostForm\";\r\nimport PostDetails from \"../../features/posts/details/PostDetails\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/user/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/user/ConfirmEmail\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent inverted content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/posts\" component={PostDashboard} />\r\n                <PrivateRoute path=\"/posts/:id\" component={PostDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/create-post\", \"/manage/:id\"]}\r\n                  component={PostForm}\r\n                />\r\n                <PrivateRoute\r\n                  path={\"/profiles/:username\"}\r\n                  component={ProfilePage}\r\n                />\r\n                <Route path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route\r\n                  path=\"/account/registerSuccess\"\r\n                  component={RegisterSuccess}\r\n                />\r\n                <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}